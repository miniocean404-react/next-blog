model User {
  id            String    @id @default(cuid())
  name          String?   @db.VarChar(100)
  username      String?   @unique
  email         String?   @unique
  image         String?
  // 邮箱确认时间
  emailVerified DateTime?
  password      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // isMachine        Boolean @default(false)
  accounts Account[]
  sessions Session[]
  tokens   Token[]

  @@index(email)
}

// 一个用户可以有多个不同的账户绑定 Github、Google 等
model Account {
  id                       String  @id @default(cuid())
  // numberId          Int  @id @default(autoincrement())
  userId                   String
  // 登录认证的类型 oauth、jwt
  type                     String
  // 是来自哪里提供的登录 github、google 等
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  // token 类型 bearer
  token_type               String?
  // 功能范围
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
