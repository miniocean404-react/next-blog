model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  password      String?

  isMachine        Boolean @default(false)
  subscribed       Boolean @default(true)
  source           String?
  defaultWorkspace String?

  accounts Account[]
  sessions Session[]
  // projects         ProjectUsers[]
  // links            Link[]
  tokens   Token[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(source)
  @@index(defaultWorkspace)
}

model Account {
  id                String  @id @default(cuid())
  // numberId          Int  @id @default(autoincrement())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
